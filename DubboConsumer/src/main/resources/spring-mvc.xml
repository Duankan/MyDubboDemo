<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                          http://www.springframework.org/schema/beans/spring-beans.xsd
		                   http://www.springframework.org/schema/context
		                   http://www.springframework.org/schema/context/spring-context-4.3.xsd
                          http://www.springframework.org/schema/mvc
                          http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                          http://www.springframework.org/schema/aop
                          http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
                          http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    <!--允许@Async-->
    <!--<task:annotation-driven/>-->
    <!--mvc注解驱动-->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!-- 自动将控制器加载到bean -->
    <context:component-scan base-package="com.github.Duan.Consumer.controller"/>
    <!--开放静态资源-->
    <mvc:resources location="/static/" mapping="/static/**"/>
    <!-- 配置视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
        <!-- 可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    </bean>
    <!-- 返回json 需导入 jackson-annotations.jar，jackson-core.jar，jackson-databind.jar -->
    <!-- 通过处理器映射DefaultAnnotationHandlerMapping来开启支持@Controller注解 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    <!-- 通过处理器适配器AnnotationMethodHandlerAdapter来开启支持@RequestMapping注解 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- 配置返回字符串编码 -->
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <!-- 配置 json 转换器 -->
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <!--开启shiro的注解支持 -->
    <bean id="defaultAdvisorAutoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
        <!-- 必须改为true，即使用cglib方式为Action创建代理对象。默认值为false，使用JDK创建代理对象，会造成问题 -->
        <property name="proxyTargetClass" value="true"></property>
    </bean>
    <!-- 使用shiro框架提供的切面类，用于创建代理对象 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>
    <!--配置异常处理-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!--表示捕获的异常-->
                <prop key="org.apache.shiro.authz.UnauthorizedException">
                    /unauthorized  <!--捕获该异常时跳转的路径-->
                </prop>
                <!--表示捕获的异常-->
                <prop key="org.apache.shiro.authc.AuthenticationException">
                    /unauthenticated  <!--捕获该异常时跳转的路径-->
                </prop>
                <prop key="org.apache.shiro.authc.IncorrectCredentialsException">
                    /unauthenticated  <!--捕获该异常时跳转的路径-->
                </prop>
            </props>
        </property>
    </bean>
</beans>